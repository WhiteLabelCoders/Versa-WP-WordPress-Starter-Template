"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[398],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(r),d=a,h=u["".concat(p,".").concat(d)]||u[d]||f[d]||o;return r?n.createElement(h,i(i({ref:t},c),{},{components:r})):n.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5562:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:8},i="Views for pages",s={unversionedId:"views-for-pages",id:"views-for-pages",title:"Views for pages",description:"Views for pages (postst, page, custom-post-type...) are defined in the views / directory by creating an appropriate",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/views-for-pages.md",sourceDirName:".",slug:"/views-for-pages",permalink:"/Versa-WP-WordPress-Starter-Template/en/views-for-pages",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Defining Gutenberg blocks",permalink:"/Versa-WP-WordPress-Starter-Template/en/gutenberg-blocks"},next:{title:"Helpers",permalink:"/Versa-WP-WordPress-Starter-Template/en/helpers"}},p={},l=[],c={toc:l},u="wrapper";function f(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"views-for-pages"},"Views for pages"),(0,a.kt)("p",null,"Views for pages (postst, page, custom-post-type...) are defined in the views / directory by creating an appropriate\nclass in the file, e.g. class-custom-post-type.php"),(0,a.kt)("p",null,"in this file we extend the Index class"),(0,a.kt)("p",null,"class Custom_Post_Type extends indxes {}"),(0,a.kt)("p",null,"we define hooks () {}"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"public function hooks() {\n    parent::hooks();\n}\n")),(0,a.kt)("p",null,"In this method, we can modify the behavior of WordPress , e.g. modification of main query by attaching to the\nappropriate hook and defining the appropriate method, for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"public function hooks() {\n    parent::hooks();\n    add_action( 'pre_get_posts', array( $this, 'main_query_filter' ) );\n}\n")),(0,a.kt)("p",null,"In the view_hooks(){} method, we connect to the appropriate view hooks by defining appropriate methods for these\nactions, for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"public function view_hooks() {\n    parent::view_hooks();\n    if ( is_home() ) {\n        add_action( 'wlc_before_content', array( get_class( $this ), 'blog_title' ), 2 );\n\n        add_action( 'wlc_before_loop', array( get_class( $this ), 'open_container' ), 10 );\n        add_action( 'wlc_after_loop', array( get_class( $this ), 'close_container' ), 20 );\n        add_action( 'wlc_after_loop', array( get_class( $this ), 'pagination' ), 30 );\n        add_action( 'wlc_entry', array( get_class( $this ), 'loop_entry' ), 5 );\n    }\n}\n")),(0,a.kt)("p",null,"If we want to be able to disable view hooks in specialized views in the future (e.g. for only one category),\nfor which we will prepare a separate class, it is worth considering the method definitions in the original\nview as static methods and hooking them in the form"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"add_action( 'wlc_entry', array( __CLASS__, 'post_title' ), 5 );\n")),(0,a.kt)("p",null,"Thanks to this, we will be able to disable a given action elsewhere."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"remove_action( 'wlc_entry', array( 'Nazwa_Klasy', 'nazwa_metody' );\n")))}f.isMDXComponent=!0}}]);